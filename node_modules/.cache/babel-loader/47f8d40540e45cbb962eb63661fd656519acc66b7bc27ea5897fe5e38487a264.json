{"ast":null,"code":"import * as Helpers from \"./helpers\";\n/**\n * Used to merge multiple React refs into a single callback ref.\n *\n * @example\n * ```tsx\n * <div ref={mergeRefs([ref, forwardedRef])} />\n * ```\n */\nexport function mergeRefs(refs) {\n  return value => {\n    refs.forEach(ref => {\n      // If the ref is a function, it's a callback ref and we call it with the value.\n      if (Helpers.isFunction(ref)) {\n        ref(value);\n      } else if (ref !== null && ref !== undefined) {\n        // If the ref is an object (not null and not undefined), it's an object ref.\n        // We assign the value to its 'current' property.\n        ref.current = value;\n      }\n    });\n  };\n}","map":{"version":3,"names":["Helpers","mergeRefs","refs","value","forEach","ref","isFunction","undefined","current"],"sources":["/Users/munatus/dev/react/assignment-2/node_modules/victory-core/es/victory-util/merge-refs.js"],"sourcesContent":["import * as Helpers from \"./helpers\";\n/**\n * Used to merge multiple React refs into a single callback ref.\n *\n * @example\n * ```tsx\n * <div ref={mergeRefs([ref, forwardedRef])} />\n * ```\n */\nexport function mergeRefs(refs) {\n  return value => {\n    refs.forEach(ref => {\n      // If the ref is a function, it's a callback ref and we call it with the value.\n      if (Helpers.isFunction(ref)) {\n        ref(value);\n      } else if (ref !== null && ref !== undefined) {\n        // If the ref is an object (not null and not undefined), it's an object ref.\n        // We assign the value to its 'current' property.\n        ref.current = value;\n      }\n    });\n  };\n}"],"mappings":"AAAA,OAAO,KAAKA,OAAO,MAAM,WAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,SAASA,CAACC,IAAI,EAAE;EAC9B,OAAOC,KAAK,IAAI;IACdD,IAAI,CAACE,OAAO,CAACC,GAAG,IAAI;MAClB;MACA,IAAIL,OAAO,CAACM,UAAU,CAACD,GAAG,CAAC,EAAE;QAC3BA,GAAG,CAACF,KAAK,CAAC;MACZ,CAAC,MAAM,IAAIE,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAKE,SAAS,EAAE;QAC5C;QACA;QACAF,GAAG,CAACG,OAAO,GAAGL,KAAK;MACrB;IACF,CAAC,CAAC;EACJ,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}