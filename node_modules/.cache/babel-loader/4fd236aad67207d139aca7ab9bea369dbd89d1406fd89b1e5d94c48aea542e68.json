{"ast":null,"code":"// *\n// * Colors\n// *\n\nconst gray = {\n  white: \"#FFFFFF\",\n  \"50\": \"#FAFAFA\",\n  \"100\": \"#F2F2F2\",\n  \"200\": \"#E8E8E8\",\n  \"300\": \"#E0E0E0\",\n  \"400\": \"#D1D1D1\",\n  \"500\": \"#757575\",\n  \"600\": \"#5C5C5C\",\n  \"700\": \"#424242\",\n  \"800\": \"#333333\",\n  \"900\": \"#292929\",\n  black: \"#0F0F0F\"\n};\nconst yellow = {\n  \"100\": \"#FFEAB6\",\n  \"300\": \"#FFD66E\",\n  \"500\": \"#FCB400\",\n  \"900\": \"#B87503\"\n};\nconst orange = {\n  \"100\": \"#FEE2D5\",\n  \"300\": \"#FFA981\",\n  \"500\": \"#FF6F2C\",\n  \"700\": \"#FF4E1B\",\n  \"900\": \"#D74D26\"\n};\nconst red = {\n  \"100\": \"#FFDCE5\",\n  \"300\": \"#FF9EB7\",\n  \"500\": \"#F82B60\",\n  \"700\": \"#D31A3D\",\n  \"900\": \"#BA1E45\"\n};\nconst purple = {\n  \"100\": \"#EDE3FE\",\n  \"300\": \"#CDB0FF\",\n  \"500\": \"#8B46FF\",\n  \"900\": \"#6B1CB0\"\n};\nconst blue = {\n  \"100\": \"#CFDFFF\",\n  \"300\": \"#9CC7FF\",\n  \"500\": \"#2D7FF9\",\n  \"700\": \"#0056B3\",\n  \"900\": \"#2750AE\"\n};\nconst cyan = {\n  \"100\": \"#D0F0FD\",\n  \"300\": \"#77D1F3\",\n  \"500\": \"#18BFFF\",\n  \"900\": \"#0B76B7\"\n};\nconst teal = {\n  \"100\": \"#C2F5E9\",\n  \"300\": \"#72DDC3\",\n  \"500\": \"#20D9D2\",\n  \"900\": \"#06A09B\"\n};\nconst green = {\n  \"100\": \"#D1F7C4\",\n  \"300\": \"#93E088\",\n  \"500\": \"#20C933\",\n  \"700\": \"#1B9B2A\",\n  \"900\": \"#338A17\"\n};\nconst colors = {\n  blue: blue[\"500\"],\n  cyan: cyan[\"500\"],\n  green: green[\"500\"],\n  yellow: yellow[\"500\"],\n  orange: orange[\"500\"],\n  red: red[\"500\"],\n  purple: purple[\"500\"],\n  teal: teal[\"500\"]\n};\nconst colorScale = Object.values(colors);\nconst grayscale = [gray[\"100\"], gray[\"300\"], gray[\"500\"], gray[\"700\"], gray[\"900\"]];\nconst warm = [yellow[\"300\"], yellow[\"500\"], orange[\"500\"], orange[\"900\"], red[\"500\"]];\nconst cool = [purple[\"500\"], blue[\"500\"], cyan[\"500\"], teal[\"500\"], green[\"500\"]];\nconst heatmap = [green[\"900\"], green[\"500\"], yellow[\"500\"], orange[\"500\"], red[\"500\"]];\nconst redPalette = Object.values(red);\nconst greenPalette = Object.values(green);\nconst bluePalette = Object.values(blue);\nconst defaultColor = blue[\"500\"];\n\n// *\n// * Typography\n// *\nconst sansSerif = \"'Inter', 'Helvetica Neue', 'Seravek', 'Helvetica', sans-serif\";\nconst letterSpacing = \"normal\";\nconst fontSize = 12;\n// *\n// * Layout\n// *\nconst padding = 8;\nconst baseProps = {\n  width: 450,\n  height: 300,\n  padding: 60,\n  colorScale\n};\n// *\n// * Labels\n// *\nconst baseLabelStyles = {\n  fontFamily: sansSerif,\n  fontSize,\n  fontWeight: 300,\n  letterSpacing,\n  padding,\n  fill: gray[\"900\"],\n  stroke: \"transparent\"\n};\nconst centeredLabelStyles = Object.assign({\n  textAnchor: \"middle\"\n}, baseLabelStyles);\n\n// *\n// * Strokes\n// *\nconst strokeDasharray = \"10, 5\";\nconst strokeLinecap = \"round\";\nconst strokeLinejoin = \"round\";\nconst borderRadius = 1;\n// *\n// * Theme\n// *\nexport const clean = {\n  palette: {\n    colors,\n    grayscale,\n    qualitative: colorScale,\n    heatmap,\n    warm,\n    cool,\n    red: redPalette,\n    green: greenPalette,\n    blue: bluePalette\n  },\n  area: Object.assign({\n    style: {\n      data: {\n        fill: defaultColor,\n        strokeWidth: 2,\n        fillOpacity: 0.5\n      },\n      labels: baseLabelStyles\n    }\n  }, baseProps),\n  axis: Object.assign({\n    style: {\n      axis: {\n        fill: \"transparent\",\n        stroke: gray[\"500\"],\n        strokeWidth: 1,\n        strokeLinecap,\n        strokeLinejoin\n      },\n      axisLabel: Object.assign({}, centeredLabelStyles, {\n        padding: 35,\n        stroke: \"transparent\"\n      }),\n      grid: {\n        fill: \"none\",\n        stroke: \"none\",\n        painterEvents: \"painted\"\n      },\n      ticks: {\n        fill: \"transparent\",\n        size: 5,\n        stroke: \"transparent\"\n      },\n      tickLabels: baseLabelStyles\n    }\n  }, baseProps),\n  polarAxis: Object.assign({\n    style: {\n      axis: {\n        stroke: gray[\"500\"]\n      },\n      grid: {\n        stroke: gray[\"400\"],\n        strokeDasharray,\n        strokeLinecap,\n        strokeLinejoin,\n        pointerEvents: \"painted\"\n      },\n      ticks: {\n        fill: \"transparent\",\n        size: 5,\n        stroke: gray[\"400\"],\n        strokeWidth: 1,\n        strokeLinecap,\n        strokeLinejoin\n      },\n      tickLabels: baseLabelStyles\n    }\n  }),\n  polarDependentAxis: Object.assign({\n    style: {\n      axis: {\n        stroke: gray[\"500\"]\n      },\n      grid: {\n        stroke: gray[\"400\"],\n        strokeDasharray,\n        strokeLinecap,\n        strokeLinejoin,\n        pointerEvents: \"painted\"\n      },\n      ticks: {\n        fill: \"transparent\",\n        size: 5,\n        stroke: gray[\"300\"],\n        strokeWidth: 1,\n        strokeLinecap,\n        strokeLinejoin\n      },\n      tickLabels: baseLabelStyles\n    }\n  }),\n  bar: Object.assign({\n    style: {\n      data: {\n        fill: defaultColor,\n        padding,\n        strokeWidth: 1,\n        fillOpacity: 0.5\n      },\n      labels: baseLabelStyles\n    },\n    cornerRadius: {\n      top: borderRadius\n    }\n  }, baseProps),\n  boxplot: Object.assign({\n    style: {\n      max: {\n        padding,\n        stroke: gray[\"400\"],\n        strokeWidth: 2\n      },\n      maxLabels: Object.assign({}, baseLabelStyles, {\n        padding: 3\n      }),\n      median: {\n        padding,\n        stroke: gray.white,\n        strokeWidth: 2\n      },\n      medianLabels: Object.assign({}, baseLabelStyles, {\n        padding: 3\n      }),\n      min: {\n        padding,\n        stroke: gray[\"400\"],\n        strokeWidth: 2\n      },\n      minLabels: Object.assign({}, baseLabelStyles, {\n        padding: 3\n      }),\n      q1: {\n        padding,\n        fill: colorScale[0],\n        rx: borderRadius,\n        strokeWidth: 2\n      },\n      q1Labels: Object.assign({}, baseLabelStyles, {\n        padding: 3\n      }),\n      q3: {\n        padding,\n        fill: colorScale[1],\n        rx: borderRadius\n      },\n      q3Labels: Object.assign({}, baseLabelStyles, {\n        padding: 3\n      })\n    },\n    boxWidth: 20\n  }, baseProps),\n  candlestick: Object.assign({\n    style: {\n      data: {\n        stroke: gray[\"300\"],\n        strokeWidth: 0,\n        rx: borderRadius\n      },\n      labels: Object.assign({}, baseLabelStyles, {\n        padding: 5\n      })\n    },\n    candleColors: {\n      positive: green[\"500\"],\n      negative: red[\"500\"]\n    },\n    wickStrokeWidth: 2\n  }, baseProps),\n  chart: baseProps,\n  errorbar: Object.assign({\n    borderWidth: 8,\n    style: {\n      data: {\n        fill: \"transparent\",\n        opacity: 1,\n        stroke: gray[\"700\"],\n        strokeWidth: 2,\n        strokeLinecap\n      },\n      labels: baseLabelStyles\n    }\n  }, baseProps),\n  group: Object.assign({\n    colorScale\n  }, baseProps),\n  histogram: Object.assign({\n    style: {\n      data: {\n        fill: cyan[\"500\"],\n        fillOpacity: 0.5\n      },\n      labels: baseLabelStyles\n    },\n    binSpacing: 4,\n    cornerRadius: {\n      top: borderRadius\n    }\n  }, baseProps),\n  label: baseLabelStyles,\n  legend: {\n    colorScale,\n    gutter: 24,\n    borderPadding: 10,\n    orientation: \"horizontal\",\n    titleOrientation: \"top\",\n    centerTitle: true,\n    style: {\n      data: {\n        type: \"circle\"\n      },\n      labels: {\n        ...baseLabelStyles,\n        fontSize: 12\n      },\n      title: Object.assign({}, baseLabelStyles, {\n        padding,\n        fontSize: 16\n      }),\n      border: {\n        stroke: gray[\"200\"],\n        strokeWidth: 2,\n        padding: 16\n      }\n    }\n  },\n  line: Object.assign({\n    style: {\n      data: {\n        fill: \"transparent\",\n        opacity: 1,\n        stroke: defaultColor,\n        strokeWidth: 2,\n        strokeLinecap,\n        strokeLinejoin\n      },\n      labels: baseLabelStyles\n    }\n  }, baseProps),\n  pie: Object.assign({\n    style: {\n      parent: {\n        backgroundColor: gray.white\n      },\n      data: {\n        padding,\n        stroke: gray.white,\n        strokeWidth: 1\n      },\n      labels: {\n        ...baseLabelStyles,\n        padding: 20,\n        fill: gray[\"600\"],\n        fontSize: 10\n      }\n    },\n    colorScale,\n    cornerRadius: borderRadius\n  }, baseProps),\n  scatter: Object.assign({\n    style: {\n      data: {\n        fill: defaultColor,\n        opacity: 1,\n        stroke: \"transparent\",\n        strokeWidth: 0\n      },\n      labels: {\n        ...baseLabelStyles,\n        padding: 20\n      }\n    }\n  }, baseProps),\n  stack: Object.assign({\n    colorScale\n  }, baseProps),\n  tooltip: {\n    style: Object.assign({}, baseLabelStyles, {\n      padding: 0,\n      pointerEvents: \"none\"\n    }),\n    flyoutStyle: {\n      stroke: gray[\"300\"],\n      strokeWidth: 2,\n      fill: gray.white,\n      pointerEvents: \"none\"\n    },\n    flyoutPadding: {\n      top: 8,\n      bottom: 8,\n      left: 16,\n      right: 16\n    },\n    cornerRadius: borderRadius,\n    pointerLength: 4\n  },\n  voronoi: Object.assign({\n    style: {\n      data: {\n        fill: blue[\"100\"],\n        stroke: defaultColor,\n        strokeWidth: 2\n      },\n      labels: Object.assign({}, baseLabelStyles, {\n        padding: 5,\n        pointerEvents: \"none\"\n      }),\n      flyout: {\n        stroke: gray[\"900\"],\n        strokeWidth: 1,\n        fill: gray[\"100\"],\n        pointerEvents: \"none\"\n      },\n      padding: {\n        left: 2,\n        bottom: 2\n      }\n    }\n  }, baseProps)\n};","map":{"version":3,"names":["gray","white","black","yellow","orange","red","purple","blue","cyan","teal","green","colors","colorScale","Object","values","grayscale","warm","cool","heatmap","redPalette","greenPalette","bluePalette","defaultColor","sansSerif","letterSpacing","fontSize","padding","baseProps","width","height","baseLabelStyles","fontFamily","fontWeight","fill","stroke","centeredLabelStyles","assign","textAnchor","strokeDasharray","strokeLinecap","strokeLinejoin","borderRadius","clean","palette","qualitative","area","style","data","strokeWidth","fillOpacity","labels","axis","axisLabel","grid","painterEvents","ticks","size","tickLabels","polarAxis","pointerEvents","polarDependentAxis","bar","cornerRadius","top","boxplot","max","maxLabels","median","medianLabels","min","minLabels","q1","rx","q1Labels","q3","q3Labels","boxWidth","candlestick","candleColors","positive","negative","wickStrokeWidth","chart","errorbar","borderWidth","opacity","group","histogram","binSpacing","label","legend","gutter","borderPadding","orientation","titleOrientation","centerTitle","type","title","border","line","pie","parent","backgroundColor","scatter","stack","tooltip","flyoutStyle","flyoutPadding","bottom","left","right","pointerLength","voronoi","flyout"],"sources":["/Users/munatus/dev/react/assignment-2/node_modules/victory-core/es/victory-theme/clean.js"],"sourcesContent":["// *\n// * Colors\n// *\n\nconst gray = {\n  white: \"#FFFFFF\",\n  \"50\": \"#FAFAFA\",\n  \"100\": \"#F2F2F2\",\n  \"200\": \"#E8E8E8\",\n  \"300\": \"#E0E0E0\",\n  \"400\": \"#D1D1D1\",\n  \"500\": \"#757575\",\n  \"600\": \"#5C5C5C\",\n  \"700\": \"#424242\",\n  \"800\": \"#333333\",\n  \"900\": \"#292929\",\n  black: \"#0F0F0F\"\n};\nconst yellow = {\n  \"100\": \"#FFEAB6\",\n  \"300\": \"#FFD66E\",\n  \"500\": \"#FCB400\",\n  \"900\": \"#B87503\"\n};\nconst orange = {\n  \"100\": \"#FEE2D5\",\n  \"300\": \"#FFA981\",\n  \"500\": \"#FF6F2C\",\n  \"700\": \"#FF4E1B\",\n  \"900\": \"#D74D26\"\n};\nconst red = {\n  \"100\": \"#FFDCE5\",\n  \"300\": \"#FF9EB7\",\n  \"500\": \"#F82B60\",\n  \"700\": \"#D31A3D\",\n  \"900\": \"#BA1E45\"\n};\nconst purple = {\n  \"100\": \"#EDE3FE\",\n  \"300\": \"#CDB0FF\",\n  \"500\": \"#8B46FF\",\n  \"900\": \"#6B1CB0\"\n};\nconst blue = {\n  \"100\": \"#CFDFFF\",\n  \"300\": \"#9CC7FF\",\n  \"500\": \"#2D7FF9\",\n  \"700\": \"#0056B3\",\n  \"900\": \"#2750AE\"\n};\nconst cyan = {\n  \"100\": \"#D0F0FD\",\n  \"300\": \"#77D1F3\",\n  \"500\": \"#18BFFF\",\n  \"900\": \"#0B76B7\"\n};\nconst teal = {\n  \"100\": \"#C2F5E9\",\n  \"300\": \"#72DDC3\",\n  \"500\": \"#20D9D2\",\n  \"900\": \"#06A09B\"\n};\nconst green = {\n  \"100\": \"#D1F7C4\",\n  \"300\": \"#93E088\",\n  \"500\": \"#20C933\",\n  \"700\": \"#1B9B2A\",\n  \"900\": \"#338A17\"\n};\nconst colors = {\n  blue: blue[\"500\"],\n  cyan: cyan[\"500\"],\n  green: green[\"500\"],\n  yellow: yellow[\"500\"],\n  orange: orange[\"500\"],\n  red: red[\"500\"],\n  purple: purple[\"500\"],\n  teal: teal[\"500\"]\n};\nconst colorScale = Object.values(colors);\nconst grayscale = [gray[\"100\"], gray[\"300\"], gray[\"500\"], gray[\"700\"], gray[\"900\"]];\nconst warm = [yellow[\"300\"], yellow[\"500\"], orange[\"500\"], orange[\"900\"], red[\"500\"]];\nconst cool = [purple[\"500\"], blue[\"500\"], cyan[\"500\"], teal[\"500\"], green[\"500\"]];\nconst heatmap = [green[\"900\"], green[\"500\"], yellow[\"500\"], orange[\"500\"], red[\"500\"]];\nconst redPalette = Object.values(red);\nconst greenPalette = Object.values(green);\nconst bluePalette = Object.values(blue);\nconst defaultColor = blue[\"500\"];\n\n// *\n// * Typography\n// *\nconst sansSerif = \"'Inter', 'Helvetica Neue', 'Seravek', 'Helvetica', sans-serif\";\nconst letterSpacing = \"normal\";\nconst fontSize = 12;\n// *\n// * Layout\n// *\nconst padding = 8;\nconst baseProps = {\n  width: 450,\n  height: 300,\n  padding: 60,\n  colorScale\n};\n// *\n// * Labels\n// *\nconst baseLabelStyles = {\n  fontFamily: sansSerif,\n  fontSize,\n  fontWeight: 300,\n  letterSpacing,\n  padding,\n  fill: gray[\"900\"],\n  stroke: \"transparent\"\n};\nconst centeredLabelStyles = Object.assign({\n  textAnchor: \"middle\"\n}, baseLabelStyles);\n\n// *\n// * Strokes\n// *\nconst strokeDasharray = \"10, 5\";\nconst strokeLinecap = \"round\";\nconst strokeLinejoin = \"round\";\nconst borderRadius = 1;\n// *\n// * Theme\n// *\nexport const clean = {\n  palette: {\n    colors,\n    grayscale,\n    qualitative: colorScale,\n    heatmap,\n    warm,\n    cool,\n    red: redPalette,\n    green: greenPalette,\n    blue: bluePalette\n  },\n  area: Object.assign({\n    style: {\n      data: {\n        fill: defaultColor,\n        strokeWidth: 2,\n        fillOpacity: 0.5\n      },\n      labels: baseLabelStyles\n    }\n  }, baseProps),\n  axis: Object.assign({\n    style: {\n      axis: {\n        fill: \"transparent\",\n        stroke: gray[\"500\"],\n        strokeWidth: 1,\n        strokeLinecap,\n        strokeLinejoin\n      },\n      axisLabel: Object.assign({}, centeredLabelStyles, {\n        padding: 35,\n        stroke: \"transparent\"\n      }),\n      grid: {\n        fill: \"none\",\n        stroke: \"none\",\n        painterEvents: \"painted\"\n      },\n      ticks: {\n        fill: \"transparent\",\n        size: 5,\n        stroke: \"transparent\"\n      },\n      tickLabels: baseLabelStyles\n    }\n  }, baseProps),\n  polarAxis: Object.assign({\n    style: {\n      axis: {\n        stroke: gray[\"500\"]\n      },\n      grid: {\n        stroke: gray[\"400\"],\n        strokeDasharray,\n        strokeLinecap,\n        strokeLinejoin,\n        pointerEvents: \"painted\"\n      },\n      ticks: {\n        fill: \"transparent\",\n        size: 5,\n        stroke: gray[\"400\"],\n        strokeWidth: 1,\n        strokeLinecap,\n        strokeLinejoin\n      },\n      tickLabels: baseLabelStyles\n    }\n  }),\n  polarDependentAxis: Object.assign({\n    style: {\n      axis: {\n        stroke: gray[\"500\"]\n      },\n      grid: {\n        stroke: gray[\"400\"],\n        strokeDasharray,\n        strokeLinecap,\n        strokeLinejoin,\n        pointerEvents: \"painted\"\n      },\n      ticks: {\n        fill: \"transparent\",\n        size: 5,\n        stroke: gray[\"300\"],\n        strokeWidth: 1,\n        strokeLinecap,\n        strokeLinejoin\n      },\n      tickLabels: baseLabelStyles\n    }\n  }),\n  bar: Object.assign({\n    style: {\n      data: {\n        fill: defaultColor,\n        padding,\n        strokeWidth: 1,\n        fillOpacity: 0.5\n      },\n      labels: baseLabelStyles\n    },\n    cornerRadius: {\n      top: borderRadius\n    }\n  }, baseProps),\n  boxplot: Object.assign({\n    style: {\n      max: {\n        padding,\n        stroke: gray[\"400\"],\n        strokeWidth: 2\n      },\n      maxLabels: Object.assign({}, baseLabelStyles, {\n        padding: 3\n      }),\n      median: {\n        padding,\n        stroke: gray.white,\n        strokeWidth: 2\n      },\n      medianLabels: Object.assign({}, baseLabelStyles, {\n        padding: 3\n      }),\n      min: {\n        padding,\n        stroke: gray[\"400\"],\n        strokeWidth: 2\n      },\n      minLabels: Object.assign({}, baseLabelStyles, {\n        padding: 3\n      }),\n      q1: {\n        padding,\n        fill: colorScale[0],\n        rx: borderRadius,\n        strokeWidth: 2\n      },\n      q1Labels: Object.assign({}, baseLabelStyles, {\n        padding: 3\n      }),\n      q3: {\n        padding,\n        fill: colorScale[1],\n        rx: borderRadius\n      },\n      q3Labels: Object.assign({}, baseLabelStyles, {\n        padding: 3\n      })\n    },\n    boxWidth: 20\n  }, baseProps),\n  candlestick: Object.assign({\n    style: {\n      data: {\n        stroke: gray[\"300\"],\n        strokeWidth: 0,\n        rx: borderRadius\n      },\n      labels: Object.assign({}, baseLabelStyles, {\n        padding: 5\n      })\n    },\n    candleColors: {\n      positive: green[\"500\"],\n      negative: red[\"500\"]\n    },\n    wickStrokeWidth: 2\n  }, baseProps),\n  chart: baseProps,\n  errorbar: Object.assign({\n    borderWidth: 8,\n    style: {\n      data: {\n        fill: \"transparent\",\n        opacity: 1,\n        stroke: gray[\"700\"],\n        strokeWidth: 2,\n        strokeLinecap\n      },\n      labels: baseLabelStyles\n    }\n  }, baseProps),\n  group: Object.assign({\n    colorScale\n  }, baseProps),\n  histogram: Object.assign({\n    style: {\n      data: {\n        fill: cyan[\"500\"],\n        fillOpacity: 0.5\n      },\n      labels: baseLabelStyles\n    },\n    binSpacing: 4,\n    cornerRadius: {\n      top: borderRadius\n    }\n  }, baseProps),\n  label: baseLabelStyles,\n  legend: {\n    colorScale,\n    gutter: 24,\n    borderPadding: 10,\n    orientation: \"horizontal\",\n    titleOrientation: \"top\",\n    centerTitle: true,\n    style: {\n      data: {\n        type: \"circle\"\n      },\n      labels: {\n        ...baseLabelStyles,\n        fontSize: 12\n      },\n      title: Object.assign({}, baseLabelStyles, {\n        padding,\n        fontSize: 16\n      }),\n      border: {\n        stroke: gray[\"200\"],\n        strokeWidth: 2,\n        padding: 16\n      }\n    }\n  },\n  line: Object.assign({\n    style: {\n      data: {\n        fill: \"transparent\",\n        opacity: 1,\n        stroke: defaultColor,\n        strokeWidth: 2,\n        strokeLinecap,\n        strokeLinejoin\n      },\n      labels: baseLabelStyles\n    }\n  }, baseProps),\n  pie: Object.assign({\n    style: {\n      parent: {\n        backgroundColor: gray.white\n      },\n      data: {\n        padding,\n        stroke: gray.white,\n        strokeWidth: 1\n      },\n      labels: {\n        ...baseLabelStyles,\n        padding: 20,\n        fill: gray[\"600\"],\n        fontSize: 10\n      }\n    },\n    colorScale,\n    cornerRadius: borderRadius\n  }, baseProps),\n  scatter: Object.assign({\n    style: {\n      data: {\n        fill: defaultColor,\n        opacity: 1,\n        stroke: \"transparent\",\n        strokeWidth: 0\n      },\n      labels: {\n        ...baseLabelStyles,\n        padding: 20\n      }\n    }\n  }, baseProps),\n  stack: Object.assign({\n    colorScale\n  }, baseProps),\n  tooltip: {\n    style: Object.assign({}, baseLabelStyles, {\n      padding: 0,\n      pointerEvents: \"none\"\n    }),\n    flyoutStyle: {\n      stroke: gray[\"300\"],\n      strokeWidth: 2,\n      fill: gray.white,\n      pointerEvents: \"none\"\n    },\n    flyoutPadding: {\n      top: 8,\n      bottom: 8,\n      left: 16,\n      right: 16\n    },\n    cornerRadius: borderRadius,\n    pointerLength: 4\n  },\n  voronoi: Object.assign({\n    style: {\n      data: {\n        fill: blue[\"100\"],\n        stroke: defaultColor,\n        strokeWidth: 2\n      },\n      labels: Object.assign({}, baseLabelStyles, {\n        padding: 5,\n        pointerEvents: \"none\"\n      }),\n      flyout: {\n        stroke: gray[\"900\"],\n        strokeWidth: 1,\n        fill: gray[\"100\"],\n        pointerEvents: \"none\"\n      },\n      padding: {\n        left: 2,\n        bottom: 2\n      }\n    }\n  }, baseProps)\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}