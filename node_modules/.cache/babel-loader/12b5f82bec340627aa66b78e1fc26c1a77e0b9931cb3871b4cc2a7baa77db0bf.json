{"ast":null,"code":"import _toPairs from \"lodash/toPairs\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport _groupBy from \"lodash/groupBy\";\nimport _forOwn from \"lodash/forOwn\";\nimport { VictoryZoomContainer, useVictoryZoomContainer } from \"victory-zoom-container\";\nimport { VictorySelectionContainer, useVictorySelectionContainer } from \"victory-selection-container\";\nimport React from \"react\";\nimport { VictoryContainer } from \"victory-core\";\nimport { VictoryVoronoiContainer, useVictoryVoronoiContainer } from \"victory-voronoi-container\";\nimport { VictoryCursorContainer, useVictoryCursorContainer } from \"victory-cursor-container\";\nimport { VictoryBrushContainer, useVictoryBrushContainer } from \"victory-brush-container\";\nfunction ensureArray(thing) {\n  if (!thing) {\n    return [];\n  } else if (!Array.isArray(thing)) {\n    return [thing];\n  }\n  return thing;\n}\nconst combineEventHandlers = eventHandlersArray => {\n  // takes an array of event handler objects and produces one eventHandlers object\n  // creates a custom combinedHandler() for events with multiple conflicting handlers\n  return eventHandlersArray.reduce((localHandlers, finalHandlers) => {\n    _forOwn(localHandlers, (localHandler, eventName) => {\n      const existingHandler = finalHandlers[eventName];\n      if (existingHandler) {\n        // create new handler for event that concats the existing handler's mutations with new ones\n        finalHandlers[eventName] = function combinedHandler() {\n          // named for debug clarity\n          // sometimes handlers return undefined; use empty array instead, for concat()\n          const existingMutations = ensureArray(existingHandler(...arguments));\n          const localMutations = ensureArray(localHandler(...arguments));\n          return existingMutations.concat(localMutations);\n        };\n      } else {\n        finalHandlers[eventName] = localHandler;\n      }\n    });\n    return finalHandlers;\n  });\n};\nconst combineDefaultEvents = defaultEvents => {\n  // takes a defaultEvents array and returns one equal or lesser length,\n  // by combining any events that have the same target\n  const eventsByTarget = _groupBy(defaultEvents, \"target\");\n  const events = _toPairs(eventsByTarget).map(_ref => {\n    let [target, eventsArray] = _ref;\n    const newEventsArray = eventsArray.filter(Boolean);\n    return _isEmpty(newEventsArray) ? null : {\n      target,\n      eventHandlers: combineEventHandlers(eventsArray.map(event => event.eventHandlers))\n      // note: does not currently handle eventKey or childName\n    };\n  });\n  return events.filter(Boolean);\n};\n/**\n * Container hooks are used to provide the container logic to the container components through props and a modified children object\n * - These hooks contain shared logic for both web and Victory Native containers.\n * - In this utility, we call multiple of these hooks with the props returned by the previous to combine the container logic.\n */\nconst CONTAINER_HOOKS = {\n  zoom: useVictoryZoomContainer,\n  selection: useVictorySelectionContainer,\n  brush: useVictoryBrushContainer,\n  cursor: useVictoryCursorContainer,\n  voronoi: useVictoryVoronoiContainer\n};\n\n/**\n * Container hooks are wrappers that return a VictoryContainer with the props provided by their respective hooks, and the modified children.\n * - These containers are specific to the web. Victory Native has its own container components.\n * - For this utility, we only need the container components to extract the defaultEvents.\n */\nconst CONTAINER_COMPONENTS_WEB = {\n  zoom: VictoryZoomContainer,\n  selection: VictorySelectionContainer,\n  brush: VictoryBrushContainer,\n  cursor: VictoryCursorContainer,\n  voronoi: VictoryVoronoiContainer\n};\nexport function makeCreateContainerFunction(containerComponents, VictoryContainerBase) {\n  // Helper type to support backwards compatibility with old types\n\n  return function combineContainers(containerA, containerB) {\n    const ContainerA = containerComponents[containerA];\n    const ContainerB = containerComponents[containerB];\n    const useContainerA = CONTAINER_HOOKS[containerA];\n    const useContainerB = CONTAINER_HOOKS[containerB];\n    const CombinedContainer = props => {\n      const {\n        children: childrenA,\n        props: propsA\n      } = useContainerA(props);\n      const {\n        children: combinedChildren,\n        props: combinedProps\n      } = useContainerB({\n        ...propsA,\n        children: childrenA\n      });\n      return /*#__PURE__*/React.createElement(VictoryContainerBase, combinedProps, combinedChildren);\n    };\n    CombinedContainer.displayName = `Victory${containerA}${containerB}Container`;\n    CombinedContainer.role = \"container\";\n    CombinedContainer.defaultEvents = props => combineDefaultEvents([...ContainerA.defaultEvents(props), ...ContainerB.defaultEvents(props)]);\n    return CombinedContainer;\n  };\n}\nexport const createContainer = makeCreateContainerFunction(CONTAINER_COMPONENTS_WEB, VictoryContainer);","map":{"version":3,"names":["_toPairs","_isEmpty","_groupBy","_forOwn","VictoryZoomContainer","useVictoryZoomContainer","VictorySelectionContainer","useVictorySelectionContainer","React","VictoryContainer","VictoryVoronoiContainer","useVictoryVoronoiContainer","VictoryCursorContainer","useVictoryCursorContainer","VictoryBrushContainer","useVictoryBrushContainer","ensureArray","thing","Array","isArray","combineEventHandlers","eventHandlersArray","reduce","localHandlers","finalHandlers","localHandler","eventName","existingHandler","combinedHandler","existingMutations","arguments","localMutations","concat","combineDefaultEvents","defaultEvents","eventsByTarget","events","map","_ref","target","eventsArray","newEventsArray","filter","Boolean","eventHandlers","event","CONTAINER_HOOKS","zoom","selection","brush","cursor","voronoi","CONTAINER_COMPONENTS_WEB","makeCreateContainerFunction","containerComponents","VictoryContainerBase","combineContainers","containerA","containerB","ContainerA","ContainerB","useContainerA","useContainerB","CombinedContainer","props","children","childrenA","propsA","combinedChildren","combinedProps","createElement","displayName","role","createContainer"],"sources":["/Users/munatus/dev/react/node_modules/victory-create-container/es/create-container.js"],"sourcesContent":["import _toPairs from \"lodash/toPairs\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport _groupBy from \"lodash/groupBy\";\nimport _forOwn from \"lodash/forOwn\";\nimport { VictoryZoomContainer, useVictoryZoomContainer } from \"victory-zoom-container\";\nimport { VictorySelectionContainer, useVictorySelectionContainer } from \"victory-selection-container\";\nimport React from \"react\";\nimport { VictoryContainer } from \"victory-core\";\nimport { VictoryVoronoiContainer, useVictoryVoronoiContainer } from \"victory-voronoi-container\";\nimport { VictoryCursorContainer, useVictoryCursorContainer } from \"victory-cursor-container\";\nimport { VictoryBrushContainer, useVictoryBrushContainer } from \"victory-brush-container\";\nfunction ensureArray(thing) {\n  if (!thing) {\n    return [];\n  } else if (!Array.isArray(thing)) {\n    return [thing];\n  }\n  return thing;\n}\nconst combineEventHandlers = eventHandlersArray => {\n  // takes an array of event handler objects and produces one eventHandlers object\n  // creates a custom combinedHandler() for events with multiple conflicting handlers\n  return eventHandlersArray.reduce((localHandlers, finalHandlers) => {\n    _forOwn(localHandlers, (localHandler, eventName) => {\n      const existingHandler = finalHandlers[eventName];\n      if (existingHandler) {\n        // create new handler for event that concats the existing handler's mutations with new ones\n        finalHandlers[eventName] = function combinedHandler() {\n          // named for debug clarity\n          // sometimes handlers return undefined; use empty array instead, for concat()\n          const existingMutations = ensureArray(existingHandler(...arguments));\n          const localMutations = ensureArray(localHandler(...arguments));\n          return existingMutations.concat(localMutations);\n        };\n      } else {\n        finalHandlers[eventName] = localHandler;\n      }\n    });\n    return finalHandlers;\n  });\n};\nconst combineDefaultEvents = defaultEvents => {\n  // takes a defaultEvents array and returns one equal or lesser length,\n  // by combining any events that have the same target\n  const eventsByTarget = _groupBy(defaultEvents, \"target\");\n  const events = _toPairs(eventsByTarget).map(_ref => {\n    let [target, eventsArray] = _ref;\n    const newEventsArray = eventsArray.filter(Boolean);\n    return _isEmpty(newEventsArray) ? null : {\n      target,\n      eventHandlers: combineEventHandlers(eventsArray.map(event => event.eventHandlers))\n      // note: does not currently handle eventKey or childName\n    };\n  });\n  return events.filter(Boolean);\n};\n/**\n * Container hooks are used to provide the container logic to the container components through props and a modified children object\n * - These hooks contain shared logic for both web and Victory Native containers.\n * - In this utility, we call multiple of these hooks with the props returned by the previous to combine the container logic.\n */\nconst CONTAINER_HOOKS = {\n  zoom: useVictoryZoomContainer,\n  selection: useVictorySelectionContainer,\n  brush: useVictoryBrushContainer,\n  cursor: useVictoryCursorContainer,\n  voronoi: useVictoryVoronoiContainer\n};\n\n/**\n * Container hooks are wrappers that return a VictoryContainer with the props provided by their respective hooks, and the modified children.\n * - These containers are specific to the web. Victory Native has its own container components.\n * - For this utility, we only need the container components to extract the defaultEvents.\n */\nconst CONTAINER_COMPONENTS_WEB = {\n  zoom: VictoryZoomContainer,\n  selection: VictorySelectionContainer,\n  brush: VictoryBrushContainer,\n  cursor: VictoryCursorContainer,\n  voronoi: VictoryVoronoiContainer\n};\nexport function makeCreateContainerFunction(containerComponents, VictoryContainerBase) {\n  // Helper type to support backwards compatibility with old types\n\n  return function combineContainers(containerA, containerB) {\n    const ContainerA = containerComponents[containerA];\n    const ContainerB = containerComponents[containerB];\n    const useContainerA = CONTAINER_HOOKS[containerA];\n    const useContainerB = CONTAINER_HOOKS[containerB];\n    const CombinedContainer = props => {\n      const {\n        children: childrenA,\n        props: propsA\n      } = useContainerA(props);\n      const {\n        children: combinedChildren,\n        props: combinedProps\n      } = useContainerB({\n        ...propsA,\n        children: childrenA\n      });\n      return /*#__PURE__*/React.createElement(VictoryContainerBase, combinedProps, combinedChildren);\n    };\n    CombinedContainer.displayName = `Victory${containerA}${containerB}Container`;\n    CombinedContainer.role = \"container\";\n    CombinedContainer.defaultEvents = props => combineDefaultEvents([...ContainerA.defaultEvents(props), ...ContainerB.defaultEvents(props)]);\n    return CombinedContainer;\n  };\n}\nexport const createContainer = makeCreateContainerFunction(CONTAINER_COMPONENTS_WEB, VictoryContainer);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}