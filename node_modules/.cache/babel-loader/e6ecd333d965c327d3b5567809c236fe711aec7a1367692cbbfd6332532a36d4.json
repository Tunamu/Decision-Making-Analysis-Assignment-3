{"ast":null,"code":"var _jsxFileName = \"/Users/munatus/dev/react/assignment-1/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport ButtonPropt from './templates/ButtonPropt';\nimport TableFunc from './templates/TableFunc';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [row, setRow] = useState(1);\n  const [column, setColumn] = useState(3);\n  function valueReader() {\n    //For checkboxes\n    const checkboxElements = [...document.querySelectorAll('.checkboxes')];\n    const checkboxValues = checkboxElements.map(element => element.checked);\n    console.log(\"checkbox values are: \" + checkboxValues);\n\n    //For weigths\n    const weightElements = [...document.querySelectorAll('.weigthInputs')];\n    const weightValues = weightElements.map(input => parseInt(input.value));\n    console.log(\"weight values are: \" + weightValues);\n\n    //Fro the all values \n    const inputElements = [...document.querySelectorAll('.numberArea')];\n    const inputValues = inputElements.map(input => parseInt(input.value));\n    console.log(\"The all values are: \" + inputValues);\n\n    //For job names\n    const jobElements = [...document.querySelectorAll('.Alternative-Inputs')];\n    const jobValues = jobElements.map(input => input.value);\n    console.log(\"job names are: \" + jobValues);\n\n    //For parameter names \n    const parameterElements = [...document.querySelectorAll('.texte')];\n    const parameterValues = parameterElements.map(input => input.value);\n    console.log(\"job names are: \" + parameterValues);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Field\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Kepner-Tregoe Method\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"First-Buttons-Part\",\n      children: [/*#__PURE__*/_jsxDEV(ButtonPropt, {\n        name: \"Add Parameter\",\n        bgColor: \"lightblue\",\n        onClickFunc: () => setRow(prevRow => prevRow + 1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonPropt, {\n        name: \"Add Alternative\",\n        bgColor: \"lightblue\",\n        onClickFunc: () => setColumn(prevColumn => prevColumn + 1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Input-Area\",\n      children: /*#__PURE__*/_jsxDEV(TableFunc, {\n        rowSize: row,\n        columnSize: column\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Second-Buttons-Part\",\n      children: [/*#__PURE__*/_jsxDEV(ButtonPropt, {\n        name: \"Calculate\",\n        bgColor: \"yellowgreen\",\n        onClickFunc: () => {\n          valueReader();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonPropt, {\n        name: \"Reset Form\",\n        bgColor: \"yellow\",\n        color: \"black\",\n        onClickFunc: () => {\n          setRow(1);\n          setColumn(3);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/n7zmuiywtyWa8si0Khm46DNQ/Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ButtonPropt","TableFunc","useState","jsxDEV","_jsxDEV","App","_s","row","setRow","column","setColumn","valueReader","checkboxElements","document","querySelectorAll","checkboxValues","map","element","checked","console","log","weightElements","weightValues","input","parseInt","value","inputElements","inputValues","jobElements","jobValues","parameterElements","parameterValues","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","bgColor","onClickFunc","prevRow","prevColumn","rowSize","columnSize","color","_c","$RefreshReg$"],"sources":["/Users/munatus/dev/react/assignment-1/src/App.js"],"sourcesContent":["import './App.css';\nimport ButtonPropt from './templates/ButtonPropt';\nimport TableFunc from './templates/TableFunc';\nimport { useState } from 'react';\n\n\nfunction App() {\n  \n  const [row,setRow ] = useState(1)\n  const [column , setColumn] = useState(3)\n\n  function valueReader(){\n    //For checkboxes\n    const checkboxElements = [...document.querySelectorAll('.checkboxes')];\n    const checkboxValues = checkboxElements.map(element => element.checked);\n    console.log(\"checkbox values are: \"+checkboxValues)\n\n    //For weigths\n    const weightElements = [...document.querySelectorAll('.weigthInputs')];\n    const weightValues = weightElements.map(input => parseInt(input.value));\n    console.log(\"weight values are: \"+weightValues)\n\n    //Fro the all values \n    const inputElements = [...document.querySelectorAll('.numberArea')];\n    const inputValues = inputElements.map(input => parseInt(input.value));\n    console.log(\"The all values are: \"+inputValues)\n\n    //For job names\n    const jobElements = [...document.querySelectorAll('.Alternative-Inputs')];\n    const jobValues = jobElements.map(input=>input.value);\n    console.log(\"job names are: \"+jobValues)\n\n    //For parameter names \n    const parameterElements = [...document.querySelectorAll('.texte')];\n    const parameterValues = parameterElements.map(input=>input.value);\n    console.log(\"job names are: \"+parameterValues)\n\n}\n\n  return (\n    <div className=\"Field\">\n      <h1>Kepner-Tregoe Method</h1>\n      <div className=\"First-Buttons-Part\">\n        <ButtonPropt name=\"Add Parameter\" bgColor=\"lightblue\" onClickFunc={()=>setRow(prevRow => prevRow + 1)}/>\n        <ButtonPropt name=\"Add Alternative\" bgColor=\"lightblue\" onClickFunc={()=>setColumn(prevColumn => prevColumn + 1)}/>\n\n      </div>\n      <div className=\"Input-Area\">\n        <TableFunc rowSize={row} columnSize={column}/>\n      </div>\n      <div className=\"Second-Buttons-Part\">\n        <ButtonPropt name=\"Calculate\" bgColor=\"yellowgreen\" onClickFunc={()=>{valueReader()}}/>\n        <ButtonPropt name=\"Reset Form\" bgColor=\"yellow\" color=\"black\" onClickFunc={()=>{setRow(1);setColumn(3)}}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,WAAW,MAAM,yBAAyB;AACjD,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,GAAG,EAACC,MAAM,CAAE,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACjC,MAAM,CAACO,MAAM,EAAGC,SAAS,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAExC,SAASS,WAAWA,CAAA,EAAE;IACpB;IACA,MAAMC,gBAAgB,GAAG,CAAC,GAAGC,QAAQ,CAACC,gBAAgB,CAAC,aAAa,CAAC,CAAC;IACtE,MAAMC,cAAc,GAAGH,gBAAgB,CAACI,GAAG,CAACC,OAAO,IAAIA,OAAO,CAACC,OAAO,CAAC;IACvEC,OAAO,CAACC,GAAG,CAAC,uBAAuB,GAACL,cAAc,CAAC;;IAEnD;IACA,MAAMM,cAAc,GAAG,CAAC,GAAGR,QAAQ,CAACC,gBAAgB,CAAC,eAAe,CAAC,CAAC;IACtE,MAAMQ,YAAY,GAAGD,cAAc,CAACL,GAAG,CAACO,KAAK,IAAIC,QAAQ,CAACD,KAAK,CAACE,KAAK,CAAC,CAAC;IACvEN,OAAO,CAACC,GAAG,CAAC,qBAAqB,GAACE,YAAY,CAAC;;IAE/C;IACA,MAAMI,aAAa,GAAG,CAAC,GAAGb,QAAQ,CAACC,gBAAgB,CAAC,aAAa,CAAC,CAAC;IACnE,MAAMa,WAAW,GAAGD,aAAa,CAACV,GAAG,CAACO,KAAK,IAAIC,QAAQ,CAACD,KAAK,CAACE,KAAK,CAAC,CAAC;IACrEN,OAAO,CAACC,GAAG,CAAC,sBAAsB,GAACO,WAAW,CAAC;;IAE/C;IACA,MAAMC,WAAW,GAAG,CAAC,GAAGf,QAAQ,CAACC,gBAAgB,CAAC,qBAAqB,CAAC,CAAC;IACzE,MAAMe,SAAS,GAAGD,WAAW,CAACZ,GAAG,CAACO,KAAK,IAAEA,KAAK,CAACE,KAAK,CAAC;IACrDN,OAAO,CAACC,GAAG,CAAC,iBAAiB,GAACS,SAAS,CAAC;;IAExC;IACA,MAAMC,iBAAiB,GAAG,CAAC,GAAGjB,QAAQ,CAACC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;IAClE,MAAMiB,eAAe,GAAGD,iBAAiB,CAACd,GAAG,CAACO,KAAK,IAAEA,KAAK,CAACE,KAAK,CAAC;IACjEN,OAAO,CAACC,GAAG,CAAC,iBAAiB,GAACW,eAAe,CAAC;EAElD;EAEE,oBACE3B,OAAA;IAAK4B,SAAS,EAAC,OAAO;IAAAC,QAAA,gBACpB7B,OAAA;MAAA6B,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BjC,OAAA;MAAK4B,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBACjC7B,OAAA,CAACJ,WAAW;QAACsC,IAAI,EAAC,eAAe;QAACC,OAAO,EAAC,WAAW;QAACC,WAAW,EAAEA,CAAA,KAAIhC,MAAM,CAACiC,OAAO,IAAIA,OAAO,GAAG,CAAC;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACxGjC,OAAA,CAACJ,WAAW;QAACsC,IAAI,EAAC,iBAAiB;QAACC,OAAO,EAAC,WAAW;QAACC,WAAW,EAAEA,CAAA,KAAI9B,SAAS,CAACgC,UAAU,IAAIA,UAAU,GAAG,CAAC;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEhH,CAAC,eACNjC,OAAA;MAAK4B,SAAS,EAAC,YAAY;MAAAC,QAAA,eACzB7B,OAAA,CAACH,SAAS;QAAC0C,OAAO,EAAEpC,GAAI;QAACqC,UAAU,EAAEnC;MAAO;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACNjC,OAAA;MAAK4B,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBAClC7B,OAAA,CAACJ,WAAW;QAACsC,IAAI,EAAC,WAAW;QAACC,OAAO,EAAC,aAAa;QAACC,WAAW,EAAEA,CAAA,KAAI;UAAC7B,WAAW,CAAC,CAAC;QAAA;MAAE;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACvFjC,OAAA,CAACJ,WAAW;QAACsC,IAAI,EAAC,YAAY;QAACC,OAAO,EAAC,QAAQ;QAACM,KAAK,EAAC,OAAO;QAACL,WAAW,EAAEA,CAAA,KAAI;UAAChC,MAAM,CAAC,CAAC,CAAC;UAACE,SAAS,CAAC,CAAC,CAAC;QAAA;MAAE;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC/B,EAAA,CAlDQD,GAAG;AAAAyC,EAAA,GAAHzC,GAAG;AAoDZ,eAAeA,GAAG;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}