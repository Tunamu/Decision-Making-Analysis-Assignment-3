{"ast":null,"code":"var _jsxFileName = \"/Users/munatus/dev/git_repos/Decision-Making-Analysis-Assignment-3/src/templates/DynamicTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DynamicTable = ({\n  setCriteria,\n  setAlternatives\n}) => {\n  _s();\n  const [columns, setColumns] = useState([\"Kriter Adı\", \"Alternatif 1\"]); // Varsayılan kolonlar\n  const [rows, setRows] = useState([]); // Başlangıçta boş bir tablo\n  const [newColumn, setNewColumn] = useState(\"\"); // Yeni kolon adı için state\n\n  // Kolon ekleme\n  const addColumn = () => {\n    if (newColumn.trim() !== \"\") {\n      setColumns([...columns, newColumn]);\n      setNewColumn(\"\");\n    }\n  };\n\n  // Satır ekleme\n  const addRow = () => {\n    setRows([...rows, {}]);\n  };\n\n  // Hücre güncelleme\n  const updateCell = (rowIndex, columnName, value) => {\n    const updatedRows = [...rows];\n    updatedRows[rowIndex][columnName] = value;\n    setRows(updatedRows);\n\n    // Alternatifleri ve kriterleri güncelle\n    const alternatives = updatedRows.map(row => columns.slice(1).reduce((acc, col) => {\n      acc[col] = row[col];\n      return acc;\n    }, {}));\n    setAlternatives(alternatives);\n    const criteria = columns.slice(1).map(col => ({\n      name: col,\n      weights: {\n        düşük: 1,\n        orta: 2,\n        yüksek: 3\n      }\n    }));\n    setCriteria(criteria);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dinamik Tablo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Yeni kolon ad\\u0131\",\n        value: newColumn,\n        onChange: e => setNewColumn(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addColumn,\n        children: \"Kolon Ekle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      style: {\n        marginTop: \"20px\",\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: columns.map((col, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: col\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: rows.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: columns.map((col, colIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: row[col] || \"\",\n              onChange: e => updateCell(rowIndex, col, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this)\n          }, colIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this))\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addRow,\n      style: {\n        marginTop: \"10px\"\n      },\n      children: \"Sat\\u0131r Ekle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(DynamicTable, \"Sb1rTHEyygWBXP8h/s1wae5AO5I=\");\n_c = DynamicTable;\nexport default DynamicTable;\nvar _c;\n$RefreshReg$(_c, \"DynamicTable\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DynamicTable","setCriteria","setAlternatives","_s","columns","setColumns","rows","setRows","newColumn","setNewColumn","addColumn","trim","addRow","updateCell","rowIndex","columnName","value","updatedRows","alternatives","map","row","slice","reduce","acc","col","criteria","name","weights","düşük","orta","yüksek","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","onClick","border","style","marginTop","width","index","colIndex","_c","$RefreshReg$"],"sources":["/Users/munatus/dev/git_repos/Decision-Making-Analysis-Assignment-3/src/templates/DynamicTable.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst DynamicTable = ({ setCriteria, setAlternatives }) => {\n  const [columns, setColumns] = useState([\"Kriter Adı\", \"Alternatif 1\"]); // Varsayılan kolonlar\n  const [rows, setRows] = useState([]); // Başlangıçta boş bir tablo\n  const [newColumn, setNewColumn] = useState(\"\"); // Yeni kolon adı için state\n\n  // Kolon ekleme\n  const addColumn = () => {\n    if (newColumn.trim() !== \"\") {\n      setColumns([...columns, newColumn]);\n      setNewColumn(\"\");\n    }\n  };\n\n  // Satır ekleme\n  const addRow = () => {\n    setRows([...rows, {}]);\n  };\n\n  // Hücre güncelleme\n  const updateCell = (rowIndex, columnName, value) => {\n    const updatedRows = [...rows];\n    updatedRows[rowIndex][columnName] = value;\n    setRows(updatedRows);\n\n    // Alternatifleri ve kriterleri güncelle\n    const alternatives = updatedRows.map((row) =>\n      columns.slice(1).reduce((acc, col) => {\n        acc[col] = row[col];\n        return acc;\n      }, {})\n    );\n    setAlternatives(alternatives);\n\n    const criteria = columns.slice(1).map((col) => ({\n      name: col,\n      weights: { düşük: 1, orta: 2, yüksek: 3 },\n    }));\n    setCriteria(criteria);\n  };\n\n  return (\n    <div>\n      <h2>Dinamik Tablo</h2>\n\n      {/* Kolon ekleme */}\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Yeni kolon adı\"\n          value={newColumn}\n          onChange={(e) => setNewColumn(e.target.value)}\n        />\n        <button onClick={addColumn}>Kolon Ekle</button>\n      </div>\n\n      {/* Tablo */}\n      <table border=\"1\" style={{ marginTop: \"20px\", width: \"100%\" }}>\n        <thead>\n          <tr>\n            {columns.map((col, index) => (\n              <th key={index}>{col}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {rows.map((row, rowIndex) => (\n            <tr key={rowIndex}>\n              {columns.map((col, colIndex) => (\n                <td key={colIndex}>\n                  <input\n                    type=\"text\"\n                    value={row[col] || \"\"}\n                    onChange={(e) =>\n                      updateCell(rowIndex, col, e.target.value)\n                    }\n                  />\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      {/* Satır ekleme */}\n      <button onClick={addRow} style={{ marginTop: \"10px\" }}>\n        Satır Ekle\n      </button>\n    </div>\n  );\n};\n\nexport default DynamicTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}