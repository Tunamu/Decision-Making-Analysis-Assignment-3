{"ast":null,"code":"var _jsxFileName = \"/Users/munatus/dev/react/assignment-2/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport ButtonPropt from './templates/ButtonPropt';\nimport TableFunc from './templates/TableFunc';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [row, setRow] = useState(1);\n  const [column, setColumn] = useState(3);\n  const [matrix, setMatrix] = useState([new Array(column - 2), new Array(row)]);\n  function valueReaderAndCalculator() {\n    //This section for finding all names and values\n    //For checkboxes\n    const checkboxElements = [...document.querySelectorAll('.checkboxes')];\n    const checkboxValues = checkboxElements.map(element => element.checked);\n    console.log(\"checkbox values are: \" + checkboxValues);\n\n    //For weigths\n    const weightElements = [...document.querySelectorAll('.weigthInputs')];\n    const weightValues = weightElements.map(input => parseInt(input.value));\n    console.log(\"weight values are: \" + weightValues);\n\n    //Fro the all values \n    const inputElements = [...document.querySelectorAll('.numberArea')];\n    const inputValues = inputElements.map(input => parseInt(input.value));\n    console.log(\"The all values are: \" + inputValues);\n\n    //For job names\n    const jobElements = [...document.querySelectorAll('.Alternative-Inputs')];\n    const jobValues = jobElements.map(input => input.value);\n    console.log(\"job names are: \" + jobValues);\n\n    //For parameter names \n    const parameterElements = [...document.querySelectorAll('.texte')];\n    const parameterValues = parameterElements.map(input => input.value);\n    console.log(\"job names are: \" + parameterValues);\n\n    //Converting the one dimention array to column arrays\n    const updateMatrix = (row, col, value) => {\n      setMatrix(prevMatrix => {\n        const newMatrix = [...prevMatrix];\n        newMatrix[row] = [...newMatrix[row]]; // İç dizi kopyalanıyor\n        newMatrix[row][col] = value;\n        return newMatrix;\n      });\n    };\n    let lenghtNum = 0;\n    console.log(\"BEFOREEEEE \" + inputValues);\n    console.log(\"ROWW: \" + row);\n    console.log(\"COLUMNN: \" + column);\n    for (let i = 0; i < column - 2; i++) {\n      for (let j = 0; j < row; j++) {\n        updateMatrix(i, j, inputValues[lenghtNum]);\n        lenghtNum++;\n      }\n    }\n    console.log(matrix);\n    //Finding the column results \n  }\n  function valueFormatter() {\n    setRow(1);\n    setColumn(3);\n\n    //For formatting the input areas\n\n    const checkboxElements = [...document.querySelectorAll('.checkboxes')];\n    checkboxElements.forEach(checkbox => checkbox.checked = true);\n    const weightElements = [...document.querySelectorAll('.weigthInputs')];\n    weightElements.forEach(input => input.value = '');\n    const inputElements = [...document.querySelectorAll('.numberArea')];\n    inputElements.forEach(input => input.value = '');\n    const jobElements = [...document.querySelectorAll('.Alternative-Inputs')];\n    jobElements.forEach(element => element.value = '');\n    const parameterElements = [...document.querySelectorAll('.texte')];\n    parameterElements.forEach(element => element.value = '');\n    const resultElements = [...document.querySelectorAll('.Result-Section')];\n    resultElements.forEach(element => element.value = '');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Field\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Kepner-Tregoe Method\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"First-Buttons-Part\",\n      children: [/*#__PURE__*/_jsxDEV(ButtonPropt, {\n        name: \"Add Parameter\",\n        bgColor: \"lightblue\",\n        onClickFunc: () => setRow(prevRow => prevRow + 1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonPropt, {\n        name: \"Add Alternative\",\n        bgColor: \"lightblue\",\n        onClickFunc: () => setColumn(prevColumn => prevColumn + 1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Input-Area\",\n      children: /*#__PURE__*/_jsxDEV(TableFunc, {\n        rowSize: row,\n        columnSize: column\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Second-Buttons-Part\",\n      children: [/*#__PURE__*/_jsxDEV(ButtonPropt, {\n        name: \"Calculate\",\n        bgColor: \"yellowgreen\",\n        onClickFunc: () => {\n          valueReaderAndCalculator();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonPropt, {\n        name: \"Reset Form\",\n        bgColor: \"yellow\",\n        color: \"black\",\n        onClickFunc: () => {\n          valueFormatter();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GGVgx05LmQxJJI24pWxbMrjL/Uo=\");\n_c = App;\nexport default App;\n\n//TODO numaraları iki boyutlu arraye geçireceğiz\n//TODO işlem yapacağımız yeni bir js sayfası açıp hesaplamaları orada yapacğız\n//TODO grafikleri nasıl koyacağımızın argesi yapılacak\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ButtonPropt","TableFunc","useState","jsxDEV","_jsxDEV","App","_s","row","setRow","column","setColumn","matrix","setMatrix","Array","valueReaderAndCalculator","checkboxElements","document","querySelectorAll","checkboxValues","map","element","checked","console","log","weightElements","weightValues","input","parseInt","value","inputElements","inputValues","jobElements","jobValues","parameterElements","parameterValues","updateMatrix","col","prevMatrix","newMatrix","lenghtNum","i","j","valueFormatter","forEach","checkbox","resultElements","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","bgColor","onClickFunc","prevRow","prevColumn","rowSize","columnSize","color","_c","$RefreshReg$"],"sources":["/Users/munatus/dev/react/assignment-2/src/App.js"],"sourcesContent":["import './App.css';\nimport ButtonPropt from './templates/ButtonPropt';\nimport TableFunc from './templates/TableFunc';\nimport { useState } from 'react';\n\n\nfunction App() {\n  \n  const [row,setRow ] = useState(1)\n  const [column , setColumn] = useState(3)\n  const [matrix,setMatrix] = useState([new Array(column-2),new Array(row)]);\n\n  function valueReaderAndCalculator(){\n\n    //This section for finding all names and values\n    //For checkboxes\n    const checkboxElements = [...document.querySelectorAll('.checkboxes')];\n    const checkboxValues = checkboxElements.map(element => element.checked);\n    console.log(\"checkbox values are: \"+checkboxValues)\n\n    //For weigths\n    const weightElements = [...document.querySelectorAll('.weigthInputs')];\n    const weightValues = weightElements.map(input => parseInt(input.value));\n    console.log(\"weight values are: \"+weightValues)\n\n    //Fro the all values \n    const inputElements = [...document.querySelectorAll('.numberArea')];\n    const inputValues = inputElements.map(input => parseInt(input.value));\n    console.log(\"The all values are: \"+inputValues)\n\n    //For job names\n    const jobElements = [...document.querySelectorAll('.Alternative-Inputs')];\n    const jobValues = jobElements.map(input=>input.value);\n    console.log(\"job names are: \"+jobValues)\n\n    //For parameter names \n    const parameterElements = [...document.querySelectorAll('.texte')];\n    const parameterValues = parameterElements.map(input=>input.value);\n    console.log(\"job names are: \"+parameterValues)\n\n    //Converting the one dimention array to column arrays\n    const updateMatrix = (row, col, value) => {\n      setMatrix(prevMatrix => {\n        const newMatrix = [...prevMatrix];\n        newMatrix[row] = [...newMatrix[row]]; // İç dizi kopyalanıyor\n        newMatrix[row][col] = value;\n        return newMatrix;\n      });\n    };\n    let lenghtNum = 0\n    console.log(\"BEFOREEEEE \"+inputValues)\n    console.log(\"ROWW: \"+row)\n    console.log(\"COLUMNN: \"+column)\n    for(let i = 0  ; i < (column-2);i++){\n\n      for(let j = 0 ; j < row ; j++){\n\n        updateMatrix(i,j ,inputValues[lenghtNum]);\n        lenghtNum++; \n\n      }\n\n    }\n    console.log(matrix);\n    //Finding the column results \n\n\n  }\n\n\n  function valueFormatter(){\n    setRow(1);\n    setColumn(3);\n\n    //For formatting the input areas\n\n    const checkboxElements = [...document.querySelectorAll('.checkboxes')];\n    checkboxElements.forEach(checkbox => checkbox.checked = true);\n\n    const weightElements = [...document.querySelectorAll('.weigthInputs')];\n    weightElements.forEach(input=>input.value = '')\n\n    const inputElements = [...document.querySelectorAll('.numberArea')];\n    inputElements.forEach(input=>input.value = '')\n\n    const jobElements = [...document.querySelectorAll('.Alternative-Inputs')];\n    jobElements.forEach(element=>element.value = '')\n\n    const parameterElements = [...document.querySelectorAll('.texte')]\n    parameterElements.forEach(element=> element.value='')\n\n    const resultElements = [...document.querySelectorAll('.Result-Section')]\n    resultElements.forEach(element=> element.value='')\n  }\n\n  return (\n    <div className=\"Field\">\n      <h1>Kepner-Tregoe Method</h1>\n      <div className=\"First-Buttons-Part\">\n        <ButtonPropt name=\"Add Parameter\" bgColor=\"lightblue\" onClickFunc={()=>setRow(prevRow => prevRow + 1)}/>\n        <ButtonPropt name=\"Add Alternative\" bgColor=\"lightblue\" onClickFunc={()=>setColumn(prevColumn => prevColumn + 1)}/>\n\n      </div>\n      <div className=\"Input-Area\">\n        <TableFunc rowSize={row} columnSize={column}/>\n      </div>\n      <div className=\"Second-Buttons-Part\">\n        <ButtonPropt name=\"Calculate\" bgColor=\"yellowgreen\" onClickFunc={()=>{valueReaderAndCalculator()}}/>\n        <ButtonPropt name=\"Reset Form\" bgColor=\"yellow\" color=\"black\" onClickFunc={()=>{valueFormatter()}}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n//TODO numaraları iki boyutlu arraye geçireceğiz\n//TODO işlem yapacağımız yeni bir js sayfası açıp hesaplamaları orada yapacğız\n//TODO grafikleri nasıl koyacağımızın argesi yapılacak"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}